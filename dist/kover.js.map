{"version":3,"sources":["../src/kover.js"],"names":["w","$","kover","obj","_","getNatural","DOMelement","img","Image","src","width","height","init","fn","wrapCell","find","length","minWidth","maxWidth","ratio","onresize","resized","onload_fn","img_size","get","calcStyle","onload","css","position","top","zIndex","left","marginLeft","marginTop","window","jQuery"],"mappings":"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","sourcesContent":[";((w, $) => {\r\n  const kover = function (obj) {\r\n    let _ = this\r\n    _.getNatural = function (DOMelement) {\r\n      var img = new Image()\r\n      img.src = DOMelement.src\r\n      return { width: img.width, height: img.height }\r\n    }\r\n    _.init = (fn) => {\r\n      if (!obj) {\r\n        throw 'kover.js: A wrap cell is required!'\r\n      }\r\n      _.wrapCell = $(obj.wrapCell)\r\n      if (_.wrapCell.find('img').length > 1) {\r\n        throw 'kover.js: multiple images detected! One cell can only contain one image, same as in CSS.'\r\n      }\r\n\r\n      _.img = _.wrapCell.find('img')\r\n      _.minWidth = obj.minWidth || null\r\n      _.maxWidth = obj.maxWidth || null\r\n      _.ratio = null\r\n\r\n      w.onresize = () => {\r\n        _.resized()\r\n      }\r\n      let onload_fn = () => {\r\n        _.img_size = _.getNatural(_.img.get(0))\r\n        _.ratio = _.img_size.height / _.img_size.width\r\n        _.calcStyle()\r\n      }\r\n      w.onload = function () {\r\n        onload_fn()\r\n      }\r\n    }\r\n    _.calcStyle = () => {\r\n      _.wrapCell.css({\r\n        position: 'relative'\r\n      })\r\n      _.img.css({\r\n        position: 'absolute',\r\n        top: '50%',\r\n        zIndex: '0',\r\n        left: '50%',\r\n        width: '100%',\r\n        marginLeft: -(_.wrapCell.width() / 2) + 'px',\r\n        marginTop: -(_.img.height() / 2) + 'px',\r\n        height: 'auto'\r\n      })\r\n      if (_.img.height() < _.wrapCell.height()) {\r\n        _.img.css({\r\n          maxWidth: 'none',\r\n          height: _.wrapCell.height(),\r\n          width: _.wrapCell.height() / _.ratio + 'px',\r\n          marginTop: -(_.wrapCell.height() / 2) + 'px',\r\n          marginLeft: -((_.img_size.width * _.ratio) / 2) + 'px'\r\n        })\r\n      }\r\n    }\r\n    _.resized = () => {\r\n      if (_.minWidth && _.wrapCell.width() <= _.minWidth) {\r\n        _.calcStyle()\r\n        _.img.css({\r\n          maxWidth: 'none',\r\n          width: _.minWidth + 'px',\r\n          left: '0',\r\n          marginTop: -(_.img.height() / 2) + 'px',\r\n          marginLeft: 0\r\n        })\r\n      } else {\r\n        _.calcStyle()\r\n      }\r\n    }\r\n\r\n    _.init()\r\n  }\r\n  $.kover = kover\r\n})(window, jQuery)\r\n"],"file":"kover.js"}